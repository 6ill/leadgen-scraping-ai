version: '3.8'

services:
  db:
    image: postgres:15 
    container_name: leads_agent_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-opportunity_spotter_dev}
    ports:
      - "${POSTGRES_PORT:-5432}:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data 

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: leads_agent_backend
    command: npm run start:dev 
    ports:
      - "${BACKEND_PORT:-3333}:3333" 
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app 
      - /usr/src/app/node_modules 
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-leads_scraper}?schema=public
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GNEWS_API_KEY: ${GNEWS_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      
    env_file:
      - .env 

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: leads_agent_frontend
    command: npm start 
    ports:
      - "${FRONTEND_PORT:-5000}:5000" 
    volumes:
      - ./frontend:/app 
      - /app/node_modules 
    depends_on:
      - backend
    environment:
      REACT_APP_API_BASE_URL: http://localhost:${BACKEND_PORT:-3001}/api 
    stdin_open: true 
    tty: true        


volumes:
  postgres_data: 