services:
  db:
    image: postgres:15 
    container_name: leads_agent_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-myuser} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
      POSTGRES_DB: ${POSTGRES_DB:-leads_db}
    ports:
      - "${POSTGRES_PORT:-5431}:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data 

  # backend:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   container_name: leads_agent_backend
  #   command: npm run start:dev 
  #   ports:
  #     - "${BACKEND_PORT:-3333}:3333" 
  #   depends_on:
  #     - db
  #   volumes:
  #     - ./server:/usr/src/app 
  #     - /usr/src/app/node_modules 
  #   environment:
  #     DATABASE_URL: postgresql://${POSTGRES_USER:-myuser}:${POSTGRES_PASSWORD:-mypassword}@db:5431/${POSTGRES_DB:-leads_db}?schema=public
  #     GEMINI_API_KEY: ${GEMINI_API_KEY}
  #     TAVILY_API_KEY: ${TAVILY_API_KEY}
      
  #   env_file:
  #     - .env 

  # frontend:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   container_name: leads_agent_frontend
  #   command: npm start 
  #   ports:
  #     - "${FRONTEND_PORT:-5000}:5000" 
  #   volumes:
  #     - ./client:/app 
  #     - /app/node_modules 
  #   depends_on:
  #     - backend
  #   environment:
  #     REACT_APP_API_BASE_URL: http://localhost:${BACKEND_PORT:-3001}/api 
  #   stdin_open: true 
  #   tty: true        


volumes:
  postgres_data: 